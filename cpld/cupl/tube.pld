Name     tube            ;
PartNo   00              ;
Date     08/12/2023      ;
Revision 01              ;
Designer David Banks     ;
Company  NA              ;
Assembly None            ;
Location                 ;
Device   f1508isptqfp100 ;

// Using defaults allow fitter command line overrides to work properly
//
//property atmel {cascade_logic  on       };
//property atmel {fast_inlatch   on       };
//property atmel {foldback_logic on       };
//property atmel {logic_doubling on       };
//property atmel {optimize       on       };
//property atmel {output_fast    off      };
//property atmel {pin_keep       off      };
//property atmel {preassign      keep     };
//property atmel {security       off      };
//property atmel {xor_synthesis  off      };

$define FIX_PINOUT

$ifdef FIX_PINOUT

pin 25 = h_addr2;
pin 40 = h_addr1;
pin 35 = h_addr0;
pin 30 = h_cs_b;
pin 23 = h_data7;
pin 20 = h_data6;
pin 14 = h_data5;
pin 10 = h_data4;
pin  6 = h_data3;
pin 94 = h_data2;
pin 92 = h_data1;
pin 85 = h_data0;
pin 31 = h_phi2;
pin 29 = h_rdnw;
pin 32 = h_rst_b;
pin 98 = h_irq_b;
pin 97 = drq;
pin 47 = dack_b;
pin 48 = p_addr2;
pin 42 = p_addr1;
pin 41 = p_addr0;
pin 44 = p_cs_b;
pin 52 = p_data7;
pin 56 = p_data6;
pin 61 = p_data5;
pin 65 = p_data4;
pin 69 = p_data3;
pin 75 = p_data2;
pin 80 = p_data1;
pin 83 = p_data0;
pin 45 = p_rd_b;
pin 46 = p_wr_b;
pin 96 = p_rst_b;
pin 99 = p_nmi_b;
pin 79 = p_irq_b;

$ELSE

pin    = h_addr2;
pin    = h_addr1;
pin    = h_addr0;
pin    = h_cs_b;
pin    = h_data7;
pin    = h_data6;
pin    = h_data5;
pin    = h_data4;
pin    = h_data3;
pin    = h_data2;
pin    = h_data1;
pin    = h_data0;
pin    = h_phi2;
pin    = h_rdnw;
pin    = h_rst_b;
pin    = h_irq_b;
pin    = drq;
pin    = dack_b;
pin    = p_addr2;
pin    = p_addr1;
pin    = p_addr0;
pin    = p_cs_b;
pin    = p_data7;
pin    = p_data6;
pin    = p_data5;
pin    = p_data4;
pin    = p_data3;
pin    = p_data2;
pin    = p_data1;
pin    = p_data0;
pin    = p_rd_b;
pin    = p_wr_b;
pin    = p_rst_b;
pin    = p_nmi_b;
pin    = p_irq_b;

$ENDIF

// Buried registers
node ph1_state;
node ph2_state;
node ph3_state;
node ph4_state;
node hp1_state;
node hp2_state;
node hp3_state;
node hp4_state;
node [control6..0];
node [ph124_data7..0];
node [ph3_data7..0];
node [hp124_data7..0];
node [hp3_data7..0];

// Intermediate values

hwrite_c   = !h_rdnw & !h_cs_b & !h_addr2 & !h_addr1 & !h_addr0;
hwrite_r1  = !h_rdnw & !h_cs_b & !h_addr2 & !h_addr1 &  h_addr0;
hwrite_r2  = !h_rdnw & !h_cs_b & !h_addr2 &  h_addr1 &  h_addr0;
hwrite_r3  = !h_rdnw & !h_cs_b &  h_addr2 & !h_addr1 &  h_addr0;
hwrite_r4  = !h_rdnw & !h_cs_b &  h_addr2 &  h_addr1 &  h_addr0;

hread_s1   =  h_rdnw & !h_cs_b & !h_addr2 & !h_addr1 & !h_addr0;
hread_r1   =  h_rdnw & !h_cs_b & !h_addr2 & !h_addr1 &  h_addr0;
hread_s2   =  h_rdnw & !h_cs_b & !h_addr2 &  h_addr1 & !h_addr0;
hread_r2   =  h_rdnw & !h_cs_b & !h_addr2 &  h_addr1 &  h_addr0;
hread_s3   =  h_rdnw & !h_cs_b &  h_addr2 & !h_addr1 & !h_addr0;
hread_r3   =  h_rdnw & !h_cs_b &  h_addr2 & !h_addr1 &  h_addr0;
hread_s4   =  h_rdnw & !h_cs_b &  h_addr2 &  h_addr1 & !h_addr0;
hread_r4   =  h_rdnw & !h_cs_b &  h_addr2 &  h_addr1 &  h_addr0;

paccess_r1 = !p_cs_b & !p_addr2 & !p_addr1 &  p_addr0;
paccess_r2 = !p_cs_b & !p_addr2 &  p_addr1 &  p_addr0;
paccess_r3 = !p_cs_b &  p_addr2 & !p_addr1 &  p_addr0;
paccess_r4 = !p_cs_b &  p_addr2 &  p_addr1 &  p_addr0;


// Control Register

[control6..0].ck = !h_phi2;
[control6..1].ar = !h_rst_b;
[control0].ap    = !h_rst_b;
[control6..0].ce = hwrite_c;
control0.d = !h_data0 & control0 # h_data0 & h_data7;
control1.d = !h_data1 & control1 # h_data1 & h_data7;
control2.d = !h_data2 & control2 # h_data2 & h_data7;
control3.d = !h_data3 & control3 # h_data3 & h_data7;
control4.d = !h_data4 & control4 # h_data4 & h_data7;
control5.d = !h_data5 & control5 # h_data5 & h_data7;
control6.d = !h_data6 & control6 # h_data6 & h_data7;

t_flag = control6; // Tube reset: a '1' holds the PH/HP FIFOs in their reset state
p_flag = control5; // Parasite reset a '1->0' transision p_rst_b to be asserted for 80us
v_flag = control4; // Two byte mode: a '1' causes PH3/HP3 to operate in two-byte mode
m_flag = control3; // PNMI from HP3 non-empty / PH3 empty
j_flag = control2; // PIEQ from HP4 non-empty
i_flag = control1; // PIRQ from HP1 non-empty
q_flag = control0; // HIRQ from PH4 non-empty


// R1, R2, R4 registers

[hp124_data7..0].ck = !h_phi2;
[hp124_data7..0].ce = hwrite_r1 # hwrite_r2 # hwrite_r4;
[hp124_data7..0].d  = h_data7..0;

[ph124_data7..0].ck = p_wr_b;
[ph124_data7..0].ce = paccess_r1 # paccess_r2 # paccess_r4;
[ph124_data7..0].d  = p_data7..0;

// R3 Registers

[hp3_data7..0].ck = !h_phi2;
[hp3_data7..0].ce = hwrite_r3;
[hp3_data7..0].d =  h_data7..0;

[ph3_data7..0].ck = p_wr_b;
[ph3_data7..0].ce = paccess_r3;
[ph3_data7..0].d =  p_data7..0;

// Flag Registers

hp1_state.ck = !h_phi2;
hp1_state.ce = hwrite_r1;
hp1_state.d  = 'b'1;
hp1_state.ar = !h_rst_b # control6 # (!p_rd_b & paccess_r1);

hp2_state.ck = !h_phi2;
hp2_state.ce = hwrite_r2;
hp2_state.d  = 'b'1;
hp2_state.ar = !h_rst_b # control6 # (!p_rd_b & paccess_r2);

hp3_state.ck = !h_phi2;
hp3_state.ce = hwrite_r3;
hp3_state.d  = 'b'1;
hp3_state.ar = !h_rst_b # control6 # (!p_rd_b & paccess_r3);

hp4_state.ck = !h_phi2;
hp4_state.ce = hwrite_r4;
hp4_state.d  = 'b'1;
hp4_state.ar = !h_rst_b # control6 # (!p_rd_b & paccess_r4);

ph1_state.ck = p_wr_b;
ph1_state.ce = paccess_r1;
ph1_state.d  = 'b'1;
ph1_state.ar = !h_rst_b # control6 # (h_phi2 & hread_r1);

ph2_state.ck = p_wr_b;
ph2_state.ce = paccess_r2;
ph2_state.d  = 'b'1;
ph2_state.ar = !h_rst_b # control6 # (h_phi2 & hread_r2);

ph3_state.ck = p_wr_b;
ph3_state.ce = paccess_r3;
ph3_state.d  = 'b'1;
ph3_state.ar = !h_rst_b # control6 # (h_phi2 & hread_r3);

ph4_state.ck = p_wr_b;
ph4_state.ce = paccess_r4;
ph4_state.d  = 'b'1;
ph4_state.ar = !h_rst_b # control6 # (h_phi2 & hread_r4);

// FIFO DAV/SAV values

hp1_dav = hp1_state;
hp2_dav = hp2_state;
hp3_dav = hp3_state;
hp4_dav = hp4_state;
ph1_dav = ph1_state;
ph2_dav = ph2_state;
ph3_dav = ph3_state;
ph4_dav = ph4_state;

hp1_sav = !ph1_state & !ph2_state & !ph4_state;
hp2_sav = !ph1_state & !ph2_state & !ph4_state;
hp3_sav = !ph3_state;
hp4_sav = !ph1_state & !ph2_state & !ph4_state;
ph1_sav = !hp1_state & !hp2_state & !hp4_state;
ph2_sav = !hp1_state & !hp2_state & !hp4_state;
ph3_sav = !hp3_state;
ph4_sav = !hp1_state & !hp2_state & !hp4_state;

nmi_flag = hp3_dav # ph3_sav;

// Interrupt locgic

p_nmi_b = !(m_flag & nmi_flag);

p_irq_b = !((j_flag & hp4_dav) # (i_flag & hp1_dav));

h_irq_b = 'b'0;
h_irq_b.oe = q_flag & ph4_dav;

// Reset logic

p_rst_b = h_rst_b & !p_flag;


// p_data output multiplexor

p_data0 = !p_addr2 & !p_addr1 & !p_addr0 & control0    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data0 #
          !p_addr2 &  p_addr1 & !p_addr0               #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data0 #
           p_addr2 & !p_addr1 & !p_addr0               #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data0   #
           p_addr2 &  p_addr1 & !p_addr0               #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data0;

p_data1 = !p_addr2 & !p_addr1 & !p_addr0 & control1    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data1 #
          !p_addr2 &  p_addr1 & !p_addr0               #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data1 #
           p_addr2 & !p_addr1 & !p_addr0               #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data1   #
           p_addr2 &  p_addr1 & !p_addr0               #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data1;

p_data2 = !p_addr2 & !p_addr1 & !p_addr0 & control2    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data2 #
          !p_addr2 &  p_addr1 & !p_addr0               #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data2 #
           p_addr2 & !p_addr1 & !p_addr0               #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data2   #
           p_addr2 &  p_addr1 & !p_addr0               #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data2;

p_data3 = !p_addr2 & !p_addr1 & !p_addr0 & control3    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data3 #
          !p_addr2 &  p_addr1 & !p_addr0               #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data3 #
           p_addr2 & !p_addr1 & !p_addr0               #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data3   #
           p_addr2 &  p_addr1 & !p_addr0               #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data3;

p_data4 = !p_addr2 & !p_addr1 & !p_addr0 & control4    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data4 #
          !p_addr2 &  p_addr1 & !p_addr0               #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data4 #
           p_addr2 & !p_addr1 & !p_addr0               #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data4   #
           p_addr2 &  p_addr1 & !p_addr0               #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data4;

p_data5 = !p_addr2 & !p_addr1 & !p_addr0 & control5    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data5 #
          !p_addr2 &  p_addr1 & !p_addr0               #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data5 #
           p_addr2 & !p_addr1 & !p_addr0               #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data5   #
           p_addr2 &  p_addr1 & !p_addr0               #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data5;

p_data6 = !p_addr2 & !p_addr1 & !p_addr0 & ph1_sav     #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data6 #
          !p_addr2 &  p_addr1 & !p_addr0 & ph2_sav     #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data6 #
           p_addr2 & !p_addr1 & !p_addr0 & ph3_sav     #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data6   #
           p_addr2 &  p_addr1 & !p_addr0 & ph4_sav     #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data6;

p_data7 = !p_addr2 & !p_addr1 & !p_addr0 & nmi_flag    #
          !p_addr2 & !p_addr1 &  p_addr0 & hp124_data7 #
          !p_addr2 &  p_addr1 & !p_addr0 & hp2_dav     #
          !p_addr2 &  p_addr1 &  p_addr0 & hp124_data7 #
           p_addr2 & !p_addr1 & !p_addr0 & hp3_dav     #
           p_addr2 & !p_addr1 &  p_addr0 & hp3_data7   #
           p_addr2 &  p_addr1 & !p_addr0 & hp4_dav     #
           p_addr2 &  p_addr1 &  p_addr0 & hp124_data7;

[p_data0..7].oe = !p_rd_b & h_rdnw & !p_cs_b;

// h_data output multiplexor

h_data0 = !h_addr2 & !h_addr1 & !h_addr0 & control0    #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data0 #
          !h_addr2 &  h_addr1 & !h_addr0               #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data0 #
           h_addr2 & !h_addr1 & !h_addr0               #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data0   #
           h_addr2 &  h_addr1 & !h_addr0               #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data0;

h_data1 = !h_addr2 & !h_addr1 & !h_addr0 & control1    #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data1 #
          !h_addr2 &  h_addr1 & !h_addr0               #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data1 #
           h_addr2 & !h_addr1 & !h_addr0               #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data1   #
           h_addr2 &  h_addr1 & !h_addr0               #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data1;

h_data2 = !h_addr2 & !h_addr1 & !h_addr0 & control2    #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data2 #
          !h_addr2 &  h_addr1 & !h_addr0               #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data2 #
           h_addr2 & !h_addr1 & !h_addr0               #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data2   #
           h_addr2 &  h_addr1 & !h_addr0               #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data2;

h_data3 = !h_addr2 & !h_addr1 & !h_addr0 & control3    #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data3 #
          !h_addr2 &  h_addr1 & !h_addr0               #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data3 #
           h_addr2 & !h_addr1 & !h_addr0               #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data3   #
           h_addr2 &  h_addr1 & !h_addr0               #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data3;

h_data4 = !h_addr2 & !h_addr1 & !h_addr0 & control4    #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data4 #
          !h_addr2 &  h_addr1 & !h_addr0               #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data4 #
           h_addr2 & !h_addr1 & !h_addr0               #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data4   #
           h_addr2 &  h_addr1 & !h_addr0               #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data4;

h_data5 = !h_addr2 & !h_addr1 & !h_addr0 & control5    #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data5 #
          !h_addr2 &  h_addr1 & !h_addr0               #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data5 #
           h_addr2 & !h_addr1 & !h_addr0               #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data5   #
           h_addr2 &  h_addr1 & !h_addr0               #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data5;

h_data6 = !h_addr2 & !h_addr1 & !h_addr0 & hp1_sav     #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data6 #
          !h_addr2 &  h_addr1 & !h_addr0 & hp2_sav     #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data6 #
           h_addr2 & !h_addr1 & !h_addr0 & hp3_sav     #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data6   #
           h_addr2 &  h_addr1 & !h_addr0 & hp4_sav     #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data6;

h_data7 = !h_addr2 & !h_addr1 & !h_addr0 & ph1_dav     #
          !h_addr2 & !h_addr1 &  h_addr0 & ph124_data7 #
          !h_addr2 &  h_addr1 & !h_addr0 & ph2_dav     #
          !h_addr2 &  h_addr1 &  h_addr0 & ph124_data7 #
           h_addr2 & !h_addr1 & !h_addr0 & ph3_dav     #
           h_addr2 & !h_addr1 &  h_addr0 & ph3_data7   #
           h_addr2 &  h_addr1 & !h_addr0 & ph4_dav     #
           h_addr2 &  h_addr1 &  h_addr0 & ph124_data7;

[h_data0..7].oe = h_phi2 & h_rdnw & !h_cs_b;
